aaronlim@MacBookAir terraform % terraform plan
data.aws_route53_zone.existing_zone: Reading...
data.aws_availability_zones.available: Reading...
data.aws_availability_zones.available: Read complete after 2s [id=us-east-1]
data.aws_instances.asg_instances: Reading...
data.aws_route53_zone.existing_zone: Read complete after 2s [id=Z00541411T1NGPV97B5C0]
data.aws_instances.asg_instances: Read complete after 0s [id=us-east-1]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated
with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.aws_autoscaling_group.web_asg will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_autoscaling_group" "web_asg" {
      + arn                                   = (known after apply)
      + availability_zones                    = (known after apply)
      + default_cooldown                      = (known after apply)
      + desired_capacity                      = (known after apply)
      + desired_capacity_type                 = (known after apply)
      + enabled_metrics                       = (known after apply)
      + health_check_grace_period             = (known after apply)
      + health_check_type                     = (known after apply)
      + id                                    = (known after apply)
      + instance_maintenance_policy           = (known after apply)
      + launch_configuration                  = (known after apply)
      + launch_template                       = (known after apply)
      + load_balancers                        = (known after apply)
      + max_instance_lifetime                 = (known after apply)
      + max_size                              = (known after apply)
      + min_size                              = (known after apply)
      + mixed_instances_policy                = (known after apply)
      + name                                  = "aalimsee-tf-web-asg"
      + new_instances_protected_from_scale_in = (known after apply)
      + placement_group                       = (known after apply)
      + predicted_capacity                    = (known after apply)
      + service_linked_role_arn               = (known after apply)
      + status                                = (known after apply)
      + suspended_processes                   = (known after apply)
      + tag                                   = (known after apply)
      + target_group_arns                     = (known after apply)
      + termination_policies                  = (known after apply)
      + traffic_source                        = (known after apply)
      + vpc_zone_identifier                   = (known after apply)
      + warm_pool                             = (known after apply)
      + warm_pool_size                        = (known after apply)
    }

  # aws_autoscaling_group.db_asg will be created
  + resource "aws_autoscaling_group" "db_asg" {
      + arn                              = (known after apply)
      + availability_zones               = (known after apply)
      + default_cooldown                 = (known after apply)
      + desired_capacity                 = 2
      + force_delete                     = false
      + force_delete_warm_pool           = false
      + health_check_grace_period        = 300
      + health_check_type                = (known after apply)
      + id                               = (known after apply)
      + ignore_failed_scaling_activities = false
      + load_balancers                   = (known after apply)
      + max_size                         = 5
      + metrics_granularity              = "1Minute"
      + min_size                         = 2
      + name                             = "aalimsee-tf-db-asg"
      + name_prefix                      = (known after apply)
      + predicted_capacity               = (known after apply)
      + protect_from_scale_in            = false
      + service_linked_role_arn          = (known after apply)
      + target_group_arns                = (known after apply)
      + vpc_zone_identifier              = (known after apply)
      + wait_for_capacity_timeout        = "10m"
      + warm_pool_size                   = (known after apply)

      + availability_zone_distribution (known after apply)

      + launch_template {
          + id      = (known after apply)
          + name    = (known after apply)
          + version = "$Latest"
        }

      + mixed_instances_policy (known after apply)

      + tag {
          + key                 = "Name"
          + propagate_at_launch = true
          + value               = "aalimsee-tf-db-asg"
        }

      + traffic_source (known after apply)
    }

  # aws_autoscaling_group.web_asg will be created
  + resource "aws_autoscaling_group" "web_asg" {
      + arn                              = (known after apply)
      + availability_zones               = (known after apply)
      + default_cooldown                 = (known after apply)
      + desired_capacity                 = 2
      + force_delete                     = false
      + force_delete_warm_pool           = false
      + health_check_grace_period        = 300
      + health_check_type                = (known after apply)
      + id                               = (known after apply)
      + ignore_failed_scaling_activities = false
      + load_balancers                   = (known after apply)
      + max_size                         = 5
      + metrics_granularity              = "1Minute"
      + min_size                         = 2
      + name                             = "aalimsee-tf-web-asg"
      + name_prefix                      = (known after apply)
      + predicted_capacity               = (known after apply)
      + protect_from_scale_in            = false
      + service_linked_role_arn          = (known after apply)
      + target_group_arns                = (known after apply)
      + vpc_zone_identifier              = (known after apply)
      + wait_for_capacity_timeout        = "10m"
      + warm_pool_size                   = (known after apply)

      + availability_zone_distribution (known after apply)

      + launch_template {
          + id      = (known after apply)
          + name    = (known after apply)
          + version = "$Latest"
        }

      + mixed_instances_policy (known after apply)

      + tag {
          + key                 = "Name"
          + propagate_at_launch = true
          + value               = "aalimsee-tf-web-asg"
        }

      + traffic_source (known after apply)
    }

  # aws_internet_gateway.aalimsee_tf_igw will be created
  + resource "aws_internet_gateway" "aalimsee_tf_igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-igw"
        }
      + tags_all = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-igw"
        }
      + vpc_id   = (known after apply)
    }

  # aws_launch_template.db_asg_lt will be created
  + resource "aws_launch_template" "db_asg_lt" {
      + arn                    = (known after apply)
      + default_version        = (known after apply)
      + description            = "Managed by Terraform - Aaron"
      + id                     = (known after apply)
      + image_id               = "ami-05576a079321f21f8"
      + instance_type          = "t2.micro"
      + key_name               = "aalimsee-keypair"
      + latest_version         = (known after apply)
      + name                   = "aalimsee-tf-db-launch-template"
      + name_prefix            = (known after apply)
      + tags_all               = (known after apply)
      + update_default_version = true

      + metadata_options (known after apply)

      + tag_specifications {
          + resource_type = "instance"
          + tags          = {
              + "CreatedBy" = "Managed by Terraform - Aaron"
              + "Name"      = "aalimsee-tf-db-instance"
            }
        }
    }

  # aws_launch_template.web_asg_lt will be created
  + resource "aws_launch_template" "web_asg_lt" {
      + arn                    = (known after apply)
      + default_version        = (known after apply)
      + description            = "Managed by Terraform - Aaron"
      + id                     = (known after apply)
      + image_id               = "ami-05576a079321f21f8"
      + instance_type          = "t2.micro"
      + key_name               = "aalimsee-keypair"
      + latest_version         = (known after apply)
      + name                   = "aalimsee-tf-web-launch-template"
      + name_prefix            = (known after apply)
      + tags                   = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-web-instance"
        }
      + tags_all               = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-web-instance"
        }
      + update_default_version = true
      + user_data              = "IyEvYmluL2Jhc2gKeXVtIHVwZGF0ZSAteQp5dW0gaW5zdGFsbCBodHRwZCAteQplY2hvICI8aDE+SGVsbG8gZnJvbSBBcHBsaWNhdGlvbiAxLCBBYXJvbiBMaW08L2gxPiIgfCBzdWRvIHRlZSAvdmFyL3d3dy9odG1sL2luZGV4Lmh0bWwKZWNobyAiPGgxPkhlbGxvIGZyb20gSW5zdGFuY2UgJChjdXJsIC1zIGh0dHA6Ly8xNjkuMjU0LjE2OS4yNTQvbGF0ZXN0L21ldGEtZGF0YS9pbnN0YW5jZS1pZCk8L2gxPiIgfCBzdWRvIHRlZSAtYSAvdmFyL3d3dy9odG1sL2luZGV4Lmh0bWwKc3lzdGVtY3RsIHN0YXJ0IGh0dHBkCnN5c3RlbWN0bCBlbmFibGUgaHR0cGQK"
      + vpc_security_group_ids = (known after apply)

      + metadata_options {
          + http_endpoint               = "enabled"
          + http_protocol_ipv6          = (known after apply)
          + http_put_response_hop_limit = 2
          + http_tokens                 = "optional"
          + instance_metadata_tags      = (known after apply)
        }
    }

  # aws_lb.internal_nlb will be created
  + resource "aws_lb" "internal_nlb" {
      + arn                                                          = (known after apply)
      + arn_suffix                                                   = (known after apply)
      + dns_name                                                     = (known after apply)
      + dns_record_client_routing_policy                             = "any_availability_zone"
      + enable_cross_zone_load_balancing                             = false
      + enable_deletion_protection                                   = false
      + enable_zonal_shift                                           = false
      + enforce_security_group_inbound_rules_on_private_link_traffic = (known after apply)
      + id                                                           = (known after apply)
      + internal                                                     = true
      + ip_address_type                                              = (known after apply)
      + load_balancer_type                                           = "network"
      + name                                                         = "aalimsee-tf-nlb"
      + name_prefix                                                  = (known after apply)
      + security_groups                                              = (known after apply)
      + subnets                                                      = (known after apply)
      + tags                                                         = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-nlb"
        }
      + tags_all                                                     = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-nlb"
        }
      + vpc_id                                                       = (known after apply)
      + zone_id                                                      = (known after apply)

      + subnet_mapping (known after apply)
    }

  # aws_lb.public_alb will be created
  + resource "aws_lb" "public_alb" {
      + arn                                                          = (known after apply)
      + arn_suffix                                                   = (known after apply)
      + client_keep_alive                                            = 3600
      + desync_mitigation_mode                                       = "defensive"
      + dns_name                                                     = (known after apply)
      + drop_invalid_header_fields                                   = false
      + enable_deletion_protection                                   = false
      + enable_http2                                                 = true
      + enable_tls_version_and_cipher_suite_headers                  = false
      + enable_waf_fail_open                                         = false
      + enable_xff_client_port                                       = false
      + enforce_security_group_inbound_rules_on_private_link_traffic = (known after apply)
      + id                                                           = (known after apply)
      + idle_timeout                                                 = 60
      + internal                                                     = false
      + ip_address_type                                              = (known after apply)
      + load_balancer_type                                           = "application"
      + name                                                         = "aalimsee-tf-alb"
      + name_prefix                                                  = (known after apply)
      + preserve_host_header                                         = false
      + security_groups                                              = (known after apply)
      + subnets                                                      = (known after apply)
      + tags                                                         = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-alb"
        }
      + tags_all                                                     = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-alb"
        }
      + vpc_id                                                       = (known after apply)
      + xff_header_processing_mode                                   = "append"
      + zone_id                                                      = (known after apply)

      + subnet_mapping (known after apply)
    }

  # aws_lb_listener.internal_listener will be created
  + resource "aws_lb_listener" "internal_listener" {
      + arn                      = (known after apply)
      + id                       = (known after apply)
      + load_balancer_arn        = (known after apply)
      + port                     = 3306
      + protocol                 = "TCP"
      + ssl_policy               = (known after apply)
      + tags_all                 = (known after apply)
      + tcp_idle_timeout_seconds = (known after apply)

      + default_action {
          + order            = (known after apply)
          + target_group_arn = (known after apply)
          + type             = "forward"
        }

      + mutual_authentication (known after apply)
    }

  # aws_lb_listener.public_listener will be created
  + resource "aws_lb_listener" "public_listener" {
      + arn                      = (known after apply)
      + id                       = (known after apply)
      + load_balancer_arn        = (known after apply)
      + port                     = 80
      + protocol                 = "HTTP"
      + ssl_policy               = (known after apply)
      + tags_all                 = (known after apply)
      + tcp_idle_timeout_seconds = (known after apply)

      + default_action {
          + order            = (known after apply)
          + target_group_arn = (known after apply)
          + type             = "forward"
        }

      + mutual_authentication (known after apply)
    }

  # aws_lb_target_group.internal_tg will be created
  + resource "aws_lb_target_group" "internal_tg" {
      + arn                                = (known after apply)
      + arn_suffix                         = (known after apply)
      + connection_termination             = (known after apply)
      + deregistration_delay               = "300"
      + id                                 = (known after apply)
      + ip_address_type                    = (known after apply)
      + lambda_multi_value_headers_enabled = false
      + load_balancer_arns                 = (known after apply)
      + load_balancing_algorithm_type      = (known after apply)
      + load_balancing_anomaly_mitigation  = (known after apply)
      + load_balancing_cross_zone_enabled  = (known after apply)
      + name                               = "aalimsee-tf-nlb-target-group"
      + name_prefix                        = (known after apply)
      + port                               = 3306
      + preserve_client_ip                 = (known after apply)
      + protocol                           = "TCP"
      + protocol_version                   = (known after apply)
      + proxy_protocol_v2                  = false
      + slow_start                         = 0
      + tags                               = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-nlb-target-group"
        }
      + tags_all                           = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-nlb-target-group"
        }
      + target_type                        = "instance"
      + vpc_id                             = (known after apply)

      + health_check (known after apply)

      + stickiness (known after apply)

      + target_failover (known after apply)

      + target_group_health (known after apply)

      + target_health_state (known after apply)
    }

  # aws_lb_target_group.public_tg will be created
  + resource "aws_lb_target_group" "public_tg" {
      + arn                                = (known after apply)
      + arn_suffix                         = (known after apply)
      + connection_termination             = (known after apply)
      + deregistration_delay               = "300"
      + id                                 = (known after apply)
      + ip_address_type                    = (known after apply)
      + lambda_multi_value_headers_enabled = false
      + load_balancer_arns                 = (known after apply)
      + load_balancing_algorithm_type      = (known after apply)
      + load_balancing_anomaly_mitigation  = (known after apply)
      + load_balancing_cross_zone_enabled  = (known after apply)
      + name                               = "aalimsee-tf-alb-target-group"
      + name_prefix                        = (known after apply)
      + port                               = 80
      + preserve_client_ip                 = (known after apply)
      + protocol                           = "HTTP"
      + protocol_version                   = (known after apply)
      + proxy_protocol_v2                  = false
      + slow_start                         = 0
      + tags                               = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-alb-target-group"
        }
      + tags_all                           = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-alb-target-group"
        }
      + target_type                        = "instance"
      + vpc_id                             = (known after apply)

      + health_check {
          + enabled             = true
          + healthy_threshold   = 3
          + interval            = 30
          + matcher             = (known after apply)
          + path                = "/"
          + port                = "traffic-port"
          + protocol            = "HTTP"
          + timeout             = 5
          + unhealthy_threshold = 2
        }

      + stickiness (known after apply)

      + target_failover (known after apply)

      + target_group_health (known after apply)

      + target_health_state (known after apply)
    }

  # aws_route53_record.public_alb will be created
  + resource "aws_route53_record" "public_alb" {
      + allow_overwrite = (known after apply)
      + fqdn            = (known after apply)
      + id              = (known after apply)
      + name            = "aalimsee-tf-web"
      + type            = "A"
      + zone_id         = "Z00541411T1NGPV97B5C0"

      + alias {
          + evaluate_target_health = true
          + name                   = (known after apply)
          + zone_id                = (known after apply)
        }
    }

  # aws_route_table.aalimsee_tf_public will be created
  + resource "aws_route_table" "aalimsee_tf_public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + gateway_id                 = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags             = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-public-route-table"
        }
      + tags_all         = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-public-route-table"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.aalimsee_tf_public[0] will be created
  + resource "aws_route_table_association" "aalimsee_tf_public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.aalimsee_tf_public[1] will be created
  + resource "aws_route_table_association" "aalimsee_tf_public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.aalimsee_tf_public[2] will be created
  + resource "aws_route_table_association" "aalimsee_tf_public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_security_group.nlb will be created
  + resource "aws_security_group" "nlb" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "Allow all outbound traffic"
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "Allow HTTP traffic to NLB"
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
            },
        ]
      + name                   = "aalimsee-tf-nlb-sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-nlb-sg"
        }
      + tags_all               = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-nlb-sg"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_security_group.web will be created
  + resource "aws_security_group" "web" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "Allow all outbound traffic"
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "Allow HTTP traffic"
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "Allow SSH traffic"
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
            },
        ]
      + name                   = "aalimsee-tf-web-sg"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-web-sg"
        }
      + tags_all               = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-web-sg"
        }
      + vpc_id                 = (known after apply)
    }

  # aws_subnet.aalimsee_tf_private[0] will be created
  + resource "aws_subnet" "aalimsee_tf_private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.4.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-private-subnet-1"
        }
      + tags_all                                       = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-private-subnet-1"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.aalimsee_tf_private[1] will be created
  + resource "aws_subnet" "aalimsee_tf_private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.5.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-private-subnet-2"
        }
      + tags_all                                       = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-private-subnet-2"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.aalimsee_tf_private[2] will be created
  + resource "aws_subnet" "aalimsee_tf_private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.6.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-private-subnet-3"
        }
      + tags_all                                       = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-private-subnet-3"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.aalimsee_tf_public[0] will be created
  + resource "aws_subnet" "aalimsee_tf_public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-public-subnet-1"
        }
      + tags_all                                       = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-public-subnet-1"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.aalimsee_tf_public[1] will be created
  + resource "aws_subnet" "aalimsee_tf_public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-public-subnet-2"
        }
      + tags_all                                       = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-public-subnet-2"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.aalimsee_tf_public[2] will be created
  + resource "aws_subnet" "aalimsee_tf_public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.3.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-public-subnet-3"
        }
      + tags_all                                       = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-public-subnet-3"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.aalimsee_tf_main will be created
  + resource "aws_vpc" "aalimsee_tf_main" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-vpc"
        }
      + tags_all                             = {
          + "CreatedBy" = "Managed by Terraform - Aaron"
          + "Name"      = "aalimsee-tf-vpc"
        }
    }

Plan: 25 to add, 0 to change, 0 to destroy.

────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these
actions if you run "terraform apply" now.
aaronlim@MacBookAir terraform % 
